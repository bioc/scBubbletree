\name{get_bubbletree}



\alias{get_bubbletree}




\title{
Clustering with k-means and hierarchical grouping of \eqn{k} clusters (bubbles)
}



\description{
Given matrix \eqn{A^{n\times f}}, which represents low dimensional projections
of the original single cell RNA-seq dataset, and number \eqn{k} of clusters,
this function performs two main procedures: 1) k-means clustering to identify
groups (bubbles) of transcriptionally similar cells; 2) organization of the
bubbles in a hierarchical dendrogram (bubbletree) which adequatly represents
inter-cluster relationships.}



\usage{
 get_bubbletree(x,
                k,
                B = 100,
                N_eff = 100,
                n_start = 1000,
                iter_max = 300,
                kmeans_algorithm = "MacQueen",
                cores = 1,
                seed = NA,
                round_digits = 2,
                show_simple_count = F)
}


\arguments{
\item{x}{numeric matrix (\eqn{A^{n\times f}} with \eqn{n} cells, and \eqn{f}
low-dimensional projections of the original single cell RNA-seq dataset)}
\item{k}{integer, number of clusters}
\item{B}{integer, number of bootstrap iterations to perform in order to
generate bubbletree}
\item{N_eff}{integer, number of cells to draw randomly from each cluster when
computing inter-cluster distances. Maximum available number of cells are used
for clusters that contain lower number of cells than N_eff}
\item{n_start, iter_max, kmeans_algorithm}{parameters for k-means clustering,
see documentation of function k-means, R-package stats}
\item{cores}{integer, number of PC cores for parallel execution}
\item{seed}{number, for reproducing results}
\item{cv_prot}{number between 0 and 1, proportion of rows from the input matrix
to be drawn at random and used during each bootstrap iteration}
\item{round_digits}{integer, number of decimal places to keep when showing the
relative frequency of cells in each bubble}
\item{show_simple_count}{logical, if show_simple_count=T, cell counts in each
bubble will be divided by 1,000 to improve readability. This is only useful for
samples that are composed of millions of cells.}}


\details{
For k-means clustering get_bubbletree uses the function kmeans implemented in
R-package stats (version 4.2.0). For additional information on clustering see
the respective documentations. To organize the resulting clusters in a
hierarchical dendrogram the algorithm performs the following steps:

1. In boostrap iteration \eqn{b} N_eff number of cells are drawn at random
   from each cluster a number of bootstrap

2. Euclidean distances between all pairs of cells in cluster \eqn{i} and cluster
   \eqn{j} are computed

3. Average Euclidean distance between cluster \eqn{i} and \eqn{j} is computed and
   matrix \eqn{D} that contains all pairs of inter-cluster distances is populated

4. Using hierarchical clustering with average linkage we generate a hierarchical
   dendrogram \eqn{H}

5. In each \eqn{B} bootstrap iterations we compute \eqn{B} number of matrices
   \eqn{D_b} and dendrograms \eqn{H_b}

6. After computing an average distance matrix \eqn{\hat{D}} we also compute a
   consensus hierarchical dendrogram (\eqn{\hat{H}}; bubbletree) with average
   linkage

7. By comparing the topology of \eqn{\hat{H}} with \eqn{H_b} we quantify the
   branch support, i.e. how often each branch in \eqn{\hat{H}} is found among
   \eqn{B} dendrograms.

8. The bubbletree is visualized with R-package ggtree
}

\value{
\item{A}{input x matrix}
\item{km}{k-means clustering results identical to those generated by function
          k-means from R-package stats}
\item{ph}{boot_ph: bootstrap dendrograms \eqn{H_b}; main_ph: consensus
          dendrogram \eqn{\hat{H}}}
\item{pair_dist}{inter-cluster distances used to generate the dendrograms}
\item{k}{number of clusters}
\item{cluster}{cluster assignments of each cell}
\item{input_par}{list of all input parameters}
\item{tree}{ggtree bubbletree object}
\item{tree_meta}{meta-data associated with the bubbletree}
}


\author{
  Simo Kitanovski <simo.kitanovski@uni-due.de>
}


\examples{
# input data

data(A)

head(A)

k <- get_bubbletree(x = A,
                    k = 18,
                    N_eff = 100)
}

\seealso{get_k, A}
